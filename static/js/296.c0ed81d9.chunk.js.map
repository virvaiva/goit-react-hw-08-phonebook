{"version":3,"file":"static/js/296.c0ed81d9.chunk.js","mappings":"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","sources":["components/Filter/Filter.jsx","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/PhoneBook/PhoneBook.jsx","components/ContactsList/Contacts/Contacts.styled.js","components/ContactsList/Contacts/Contacts.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { nanoid } from 'nanoid';\nimport { Input, Flex } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilterChange = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value.trim()));\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" flexDirection=\"column\">\n      Find contacts by Name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search contact\"\n        id={nanoid()}\n        onChange={handleFilterChange}\n        width={400}\n      />\n    </Flex>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nconst selectValueFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectValueFilter],\n  (contacts, valueFilter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(valueFilter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from 'nanoid';\nimport { Box, Input, Button, Flex } from '@chakra-ui/react';\n\nexport default function ContactsForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const { name, number } = form;\n\n    let value = {\n      name: name.value,\n      number: number.value,\n    };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.value.toLowerCase()\n      )\n    ) {\n      return alert(`${name.value} is already in contacts.`);\n    }\n\n    dispatch(addContact(value));\n\n    form.reset();\n  };\n\n  return (\n    <Flex m={0} mb={5} fontSize={18}>\n      <Box onSubmit={handleSubmit} width={300}>\n        <Box marginBottom={5}>\n          <label>Name</label>\n          <Input\n            placeholder=\"Enter your name\"\n            size=\"md\"\n            id={nanoid()}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Box>\n        <Box marginBottom={5}>\n          <label>Number</label>\n          <Input\n            placeholder=\"+38 (000) 000 00 00\"\n            id={nanoid()}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Box>\n        <Button width=\"100%\" colorScheme=\"teal\" size=\"lg\" type=\"submit\">\n          Add contact\n        </Button>\n      </Box>\n    </Flex>\n  );\n}\n","import ContactsForm from 'components/ContactsForm/ContactsForm';\nimport { Flex, Heading } from '@chakra-ui/react';\n\nconst Phonebook = () => {\n  return (\n    <Flex align=\"center\" justify=\"center\" flexDirection=\"column\">\n      <Heading\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n        bgClip=\"text\"\n        fontSize=\"4xl\"\n        fontWeight=\"extrabold\"\n        mb={5}\n      >\n        Phonebook\n      </Heading>\n      <ContactsForm />\n      <Heading\n        bgGradient=\"linear(to-l, #28ca3b, #FF0080)\"\n        bgClip=\"text\"\n        fontSize=\"4xl\"\n        fontWeight=\"extrabold\"\n        mb={5}\n      >\n        Contacts\n      </Heading>\n    </Flex>\n  );\n};\n\nexport default Phonebook;\n","import styled from 'styled-components';\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  padding: 5px 0;\n  background-color: #4f83cc;\n  border-radius: 20px;\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  justify-content: space-between;\n  //flex-direction: column;\n  align-items: flex-start;\n  gap: 5px;\n  font-family: inherit;\n  font-size: 20px;\n  font-weight: 500;\n  flex-grow: 1;\n  color: #edffff;\n  span {\n    font-size: 20px;\n    color: #edffff;\n  }\n`;\n\nexport const Avatar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  margin-left: 10px;\n  height: 30px;\n  border-radius: 45%;\n  /* background-color: ${props => props.color}; */\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  margin-right: 10px;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  svg {\n    color: #bdbdbd;\n  }\n  &:hover {\n    svg {\n      color: #2196f3;\n    }\n  }\n`;\n","import { MdDeleteForever } from 'react-icons/md';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  ContactWrapper,\n  Text,\n  Button,\n} from 'components/ContactsList/Contacts/Contacts.styled';\n\nconst Contacts = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ContactWrapper>\n      <Text>\n        {name}\n        <span> {number}</span>\n      </Text>\n\n      <Button type=\"button\" onClick={handleDelete}>\n        <MdDeleteForever size={28} />\n      </Button>\n    </ContactWrapper>\n  );\n};\nexport default Contacts;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport Contacts from './Contacts/Contacts';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <Contacts contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport Phonebook from 'components/PhoneBook/PhoneBook';\nimport ContactList from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <Phonebook />\n      <Filter />\n      {isLoading && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["Filter","dispatch","useDispatch","align","justify","flexDirection","I","type","name","placeholder","id","nanoid","onChange","event","value","target","setFilter","trim","width","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectVisibleContacts","createSelector","filter","valueFilter","contact","toLowerCase","includes","ContactsForm","useSelector","m","mb","fontSize","onSubmit","preventDefault","form","number","some","alert","addContact","reset","marginBottom","size","pattern","title","required","colorScheme","bgGradient","bgClip","fontWeight","ContactWrapper","styled","Text","Button","props","color","onClick","deleteContact","map","useEffect","fetchContacts"],"sourceRoot":""}