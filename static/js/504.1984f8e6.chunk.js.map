{"version":3,"file":"static/js/504.1984f8e6.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Filter/Filter.jsx","components/ContactsForm/ContactsForm.jsx","components/PhoneBook/PhoneBook.jsx","components/ContactsList/ContactsList.jsx","components/Loader/Loader.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.contactList;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state).toLowerCase();\n\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/filterSlice';\nimport { Input, Flex, Text } from '@chakra-ui/react';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = event => {\n    dispatch(contactsFilter(event.target.value));\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" flexDirection=\"column\" mb={10}>\n      <Text mb={2}>Find contacts by Name</Text>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search contact\"\n        value={filter}\n        onChange={handleFilterChange}\n        width={400}\n      />\n    </Flex>\n  );\n};\n","import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nfunction ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const repeatName = contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n    if (!repeatName) {\n      Notify.success(`${name} is added in contacts`);\n      dispatch(addContact({ name, number }));\n      setNumber('');\n      setName('');\n      return;\n    }\n    Notify.warning(`${name} is already in contacts`);\n  };\n\n  return (\n    <FormControl width={300} marginBottom={5}>\n      <form onSubmit={handleSubmit}>\n        <FormLabel m={0}>\n          Name\n          <Input\n            placeholder=\"Enter your name\"\n            size=\"md\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={name}\n            marginBottom={3}\n          />\n        </FormLabel>\n        <FormLabel m={0}>\n          Number\n          <Input\n            placeholder=\"+38 (000) 000 00 00\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={number}\n            marginBottom={5}\n          />\n        </FormLabel>\n        <Button colorScheme=\"teal\" variant=\"solid\" width=\"100% \" type=\"submit\">\n          Add Contact\n        </Button>\n      </form>\n    </FormControl>\n  );\n}\nexport default ContactsForm;\n","import ContactsForm from 'components/ContactsForm/ContactsForm';\nimport { Flex, Heading } from '@chakra-ui/react';\n\nconst Phonebook = () => {\n  return (\n    <Flex align=\"center\" justify=\"center\" flexDirection=\"column\">\n      <Heading\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n        bgClip=\"text\"\n        fontSize=\"4xl\"\n        fontWeight=\"extrabold\"\n        mb={5}\n      >\n        Phonebook\n      </Heading>\n      <ContactsForm />\n      <Heading\n        bgGradient=\"linear(to-l, #28ca3b, #FF0080)\"\n        bgClip=\"text\"\n        fontSize=\"4xl\"\n        fontWeight=\"extrabold\"\n        mb={5}\n      >\n        Contacts\n      </Heading>\n    </Flex>\n  );\n};\n\nexport default Phonebook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { IoIosContact } from 'react-icons/io';\nimport { MdDeleteOutline } from 'react-icons/md';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport { Flex, Grid, GridItem, Button } from '@chakra-ui/react';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContact(id));\n  const contacts = useSelector(getVisibleContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Flex align=\"center\" justify=\"center\" m={5}>\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={6}>\n        {contacts.map(({ id, name, number }) => (\n          <GridItem\n            key={id}\n            p={3}\n            w=\"100%\"\n            h=\"10\"\n            border=\"2px\"\n            borderRadius=\"4px\"\n            borderColor=\"gray.200\"\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Flex align=\"center\" justify=\"center\">\n              <IoIosContact size={30} />\n              {name}: {number}\n            </Flex>\n            <Button\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n              ml={10}\n              colorScheme=\"teal\"\n              variant=\"link\"\n            >\n              <MdDeleteOutline size={28} />\n            </Button>\n          </GridItem>\n        ))}\n      </Grid>\n    </Flex>\n  );\n};\nexport default ContactList;\n","import { ColorRing } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport React from 'react';\n\nexport const Loader = ({ loading }) => (\n  <div>\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n    ;\n  </div>\n);\n","import { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport Phonebook from 'components/PhoneBook/PhoneBook';\nimport ContactList from 'components/ContactsList/ContactsList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <Phonebook />\n      <Filter />\n      {isLoading && <Loader />}\n      <ContactList />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","contactList","selectIsLoading","isLoading","selectFilter","filter","getVisibleContacts","toLowerCase","name","includes","Filter","dispatch","useDispatch","useSelector","align","justify","flexDirection","mb","I","type","placeholder","value","onChange","event","contactsFilter","target","width","useState","setName","number","setNumber","handleChange","marginBottom","onSubmit","preventDefault","find","contact","Notify","addContact","m","size","pattern","title","required","colorScheme","variant","bgGradient","bgClip","fontSize","fontWeight","useEffect","fetchContacts","templateColumns","gap","map","id","p","w","h","border","borderRadius","borderColor","display","justifyContent","alignItems","onClick","deleteContact","onDeleteContact","ml","Loader","loading","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}