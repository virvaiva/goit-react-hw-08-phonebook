{"version":3,"file":"static/js/290.47bab17c.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListUl = styled.ul`\n  font-size: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0;\n`;\nexport const ListLi = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 2px solid black;\n  border-radius: 35px;\n  list-style-position: inside;\n  width: 450px;\n  padding: 20px;\n`;\nexport const BtnDelete = styled.button`\n  border: 2px solid #212121;\n  border-radius: 35px;\n  margin-left: 18px;\n  font-size: 18px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: rgb(107, 12, 5);\n    color: #fff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteContacts,\n  getVisibleContacts,\n  fetchContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { ListUl, ListLi, BtnDelete } from './ContactList.styled';\nimport { MdOutlineContactPhone } from 'react-icons/md';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContacts(id));\n  const contacts = useSelector(getVisibleContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <ListUl>\n      {contacts.map(({ id, name, phone }) => (\n        <ListLi key={id}>\n          <MdOutlineContactPhone />\n          {name}: {phone}\n          <BtnDelete type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </BtnDelete>\n        </ListLi>\n      ))}\n    </ListUl>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  border: 4px solid #212121;\n  border-radius: 35px;\n  width: 350px;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 30px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: 35px;\n  gap: 12px;\n  font-size: 20px;\n  font-weight: 700;\n`;\nexport const Input = styled.input`\n  width: 300px;\n  height: 24px;\n  outline: transparent;\n  padding: 0 8px;\n  border: 2px solid #000;\n  border-radius: 35px;\n  &:hover,\n  &:focus {\n    border: 2px solid rgb(22, 76, 7);\n  }\n`;\nexport const Button = styled.button`\n  color: #212121;\n  padding: 6px;\n  font-size: 18px;\n  cursor: pointer;\n  border: transparent;\n  border-radius: 4px;\n  box-shadow: 0px 4px 6px rgb(0 0 0 / 15%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n  &:hover,\n  &:focus {\n    background: rgb(22, 76, 7);\n    color: #fff;\n  }\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Form, Label, Input, Button } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts, getContacts } from 'redux/contacts/contactsSelectors';\n\nexport function Contact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const repeatName = contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n    if (!repeatName) {\n      Notify.success(`${name} is added in contacts`);\n      dispatch(addContacts({ name, number }));\n      setNumber('');\n      setName('');\n      return;\n    }\n    Notify.warning(`${name} is already in contacts`);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </Label>\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n  font-size: 25px;\n  font-weight: 600;\n`;\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  border-radius: 35px;\n  outline: transparent;\n  padding: 0 8px;\n  border: 2px solid black;\n  &:hover,\n  &:focus {\n    border: 3px solid green;\n  }\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterChangeAction } from 'redux/contacts/contactsAction';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\n\nexport const Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const handleFilterChange = event =>\n    dispatch(filterChangeAction(event.target.value));\n\n  return (\n    <Label>\n      Find contacts by Name\n      <Input\n        type=\"text\"\n        placeholder=\"Search contact\"\n        value={value}\n        onChange={handleFilterChange}\n      />\n    </Label>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Contact } from 'components/Contacts/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchContacts,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\n\nexport function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Contact />\n      <Filter />\n      {isLoading && <b>Request in progress...</b>}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["ListUl","styled","ListLi","BtnDelete","ContactList","dispatch","useDispatch","contacts","useSelector","getVisibleContacts","useEffect","fetchContacts","map","id","name","phone","type","onClick","deleteContacts","onDeleteContact","Form","Label","Input","Button","Contact","useState","setName","number","setNumber","getContacts","handleChange","event","target","value","onSubmit","preventDefault","find","contact","toLowerCase","Notify","addContacts","pattern","title","required","onChange","Filter","getFilter","placeholder","filterChangeAction","ContactsPage","isLoading","selectIsLoading"],"sourceRoot":""}