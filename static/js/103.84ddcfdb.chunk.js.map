{"version":3,"file":"static/js/103.84ddcfdb.chunk.js","mappings":"kPAKaA,EAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,UAAC,IAAD,CAAMC,MAAM,SAASC,QAAQ,SAASC,cAAc,SAApD,mCAEE,SAAC,EAAAC,EAAD,CACEC,KAAK,OACLC,KAAK,SACLC,YAAY,iBACZC,IAAIC,EAAAA,EAAAA,MACJC,SAdqB,SAAAC,GACzB,IAAQC,EAAUD,EAAME,OAAhBD,MAERb,GAASe,EAAAA,EAAAA,GAAeF,GACzB,EAWKG,MAAO,QAId,E,oBC3BYC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,WAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAIvBC,EAAqB,SAAAL,GAChC,IAAMC,EAAWF,EAAeC,GAC1BM,EAJoB,SAAAN,GAAK,OAAIA,EAAMM,MAAV,CAIhBC,CAAaP,GAAOQ,cAEnC,OAAOP,EAASK,QAAO,qBAAGjB,KAAgBmB,cAAcC,SAASH,EAA1C,GACxB,E,4DCHc,SAASI,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOtB,EAAP,KAAauB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMhC,GAAWC,EAAAA,EAAAA,MACXkB,GAAWc,EAAAA,EAAAA,IAAYhB,GAC7BiB,QAAQC,IAAIhB,GACZ,IAAMiB,EAAe,SAAAxB,GACnB,MAAwBA,EAAME,OAAtBP,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MAEd,OAAQN,GACN,IAAK,OACHuB,EAAQjB,GACR,MACF,IAAK,SACHmB,EAAUnB,GACV,MACF,QACE,OAEL,EAkBD,OACE,UAAC,KAAD,CAAKwB,SAjBc,SAAAzB,GAMnB,GALAA,EAAM0B,kBAEanB,EAASoB,MAAK,SAAAC,GAC/B,OAAOA,EAAQjC,KAAKmB,gBAAkBnB,EAAKmB,aAC5C,IAMC,OAJAe,EAAAA,OAAAA,QAAA,UAAkBlC,EAAlB,0BACAP,GAAS0C,EAAAA,EAAAA,IAAW,CAAEnC,KAAAA,EAAMwB,OAAAA,KAC5BC,EAAU,SACVF,EAAQ,IAGVW,EAAAA,OAAAA,QAAA,UAAkBlC,EAAlB,2BACD,EAG8BS,MAAO,IAApC,WACE,UAAC,KAAD,CAAa2B,aAAc,EAA3B,WACE,SAAC,IAAD,oBACA,SAAC,EAAAtC,EAAD,CACEG,YAAY,kBACZoC,KAAK,KACLtC,KAAK,OACLC,KAAK,OACLsC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRpC,SAAUyB,EACVvB,MAAON,QAGX,UAAC,KAAD,CAAaoC,aAAc,EAA3B,WACE,SAAC,IAAD,sBACA,SAAC,EAAAtC,EAAD,CACEG,YAAY,sBACZF,KAAK,MACLC,KAAK,SACLsC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRpC,SAAUyB,EACVvB,MAAOkB,QAGX,SAAC,IAAD,CAAQiB,YAAY,OAAOC,QAAQ,QAAQjC,MAAM,QAAQV,KAAK,SAA9D,2BAKL,C,cClDD,EA1BkB,WAChB,OACE,UAAC,IAAD,CAAMJ,MAAM,SAASC,QAAQ,SAASC,cAAc,SAApD,WACE,SAAC,IAAD,CACE8C,WAAW,iCACXC,OAAO,OACPC,SAAS,MACTC,WAAW,YACXC,GAAI,EALN,wBASA,SAAC1B,EAAD,KACA,SAAC,IAAD,CACEsB,WAAW,iCACXC,OAAO,OACPC,SAAS,MACTC,WAAW,YACXC,GAAI,EALN,wBAWL,E,UCCD,EArBoB,WAClB,IAAMtD,GAAWC,EAAAA,EAAAA,MAEXkB,GAAWc,EAAAA,EAAAA,IAAYV,GAI7B,OAHAgC,EAAAA,EAAAA,YAAU,WACRvD,GAASwD,EAAAA,EAAAA,MACV,GAAE,CAACxD,KAEF,wBACGmB,EAASsC,KAAI,gBAAGhD,EAAH,EAAGA,GAAIF,EAAP,EAAOA,KAAMmD,EAAb,EAAaA,MAAb,OACZ,2BACE,SAAC,MAAD,IACCnD,EAFH,KAEWmD,GACT,mBAAQpD,KAAK,SAASqD,QAAS,kBAXf,SAAAlD,GAAE,OAAIT,GAAS4D,EAAAA,EAAAA,IAAcnD,GAA3B,CAWmBoD,CAAgBpD,EAAtB,EAA/B,sBAHOA,EADG,KAWnB,ECHD,EAhBqB,WACnB,IAAMT,GAAWC,EAAAA,EAAAA,MACXqB,GAAYW,EAAAA,EAAAA,IAAYZ,GAK9B,OAHAkC,EAAAA,EAAAA,YAAU,WACRvD,GAASwD,EAAAA,EAAAA,MACV,GAAE,CAACxD,KAEF,4BACE,SAAC,EAAD,KACA,SAACD,EAAD,IACCuB,IAAa,mDACd,SAAC,EAAD,MAGL,C","sources":["components/Filter/Filter.jsx","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/PhoneBook/PhoneBook.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/filterSlice';\nimport { nanoid } from 'nanoid';\nimport { Input, Flex } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const { value } = event.target;\n\n    dispatch(contactsFilter(value));\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" flexDirection=\"column\">\n      Find contacts by Name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search contact\"\n        id={nanoid()}\n        onChange={handleFilterChange}\n        width={400}\n      />\n    </Flex>\n  );\n};\n","export const selectContacts = state => state.contacts.contactList;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state).toLowerCase();\n\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Box, Input, Button, FormLabel, FormControl } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport default function ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  console.log(contacts);\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const repeatName = contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n    if (!repeatName) {\n      Notify.success(`${name} is added in contacts`);\n      dispatch(addContact({ name, number }));\n      setNumber('');\n      setName('');\n      return;\n    }\n    Notify.warning(`${name} is already in contacts`);\n  };\n\n  return (\n    <Box onSubmit={handleSubmit} width={300}>\n      <FormControl marginBottom={5}>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter your name\"\n          size=\"md\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </FormControl>\n      <FormControl marginBottom={5}>\n        <FormLabel>Number</FormLabel>\n        <Input\n          placeholder=\"+38 (000) 000 00 00\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </FormControl>\n      <Button colorScheme=\"teal\" variant=\"solid\" width=\"100% \" type=\"submit\">\n        Add Contact\n      </Button>\n    </Box>\n  );\n}\n","import ContactsForm from 'components/ContactsForm/ContactsForm';\nimport { Flex, Heading } from '@chakra-ui/react';\n\nconst Phonebook = () => {\n  return (\n    <Flex align=\"center\" justify=\"center\" flexDirection=\"column\">\n      <Heading\n        bgGradient=\"linear(to-l, #7928CA, #FF0080)\"\n        bgClip=\"text\"\n        fontSize=\"4xl\"\n        fontWeight=\"extrabold\"\n        mb={5}\n      >\n        Phonebook\n      </Heading>\n      <ContactsForm />\n      <Heading\n        bgGradient=\"linear(to-l, #28ca3b, #FF0080)\"\n        bgClip=\"text\"\n        fontSize=\"4xl\"\n        fontWeight=\"extrabold\"\n        mb={5}\n      >\n        Contacts\n      </Heading>\n    </Flex>\n  );\n};\n\nexport default Phonebook;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { MdOutlineContactPhone } from 'react-icons/md';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContact(id));\n  const contacts = useSelector(getVisibleContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <ul>\n      {contacts.map(({ id, name, phone }) => (\n        <li key={id}>\n          <MdOutlineContactPhone />\n          {name}: {phone}\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;\n","import { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport Phonebook from 'components/PhoneBook/PhoneBook';\nimport ContactList from 'components/ContactsList/ContactsList';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <Phonebook />\n      <Filter />\n      {isLoading && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\nexport default ContactsPage;\n"],"names":["Filter","dispatch","useDispatch","align","justify","flexDirection","I","type","name","placeholder","id","nanoid","onChange","event","value","target","contactsFilter","width","selectContacts","state","contacts","contactList","selectIsLoading","isLoading","getVisibleContacts","filter","selectFilter","toLowerCase","includes","ContactsForm","useState","setName","number","setNumber","useSelector","console","log","handleChange","onSubmit","preventDefault","find","contact","Notify","addContact","marginBottom","size","pattern","title","required","colorScheme","variant","bgGradient","bgClip","fontSize","fontWeight","mb","useEffect","fetchContacts","map","phone","onClick","deleteContact","onDeleteContact"],"sourceRoot":""}